Перем manfid;

Функция глСостояниеВыполнения(ТекСтрока,Знач ВсегоСтрок,Знач Подсказка = "Выполнено... ") Экспорт
	Состояние(Подсказка+Окр(100*ТекСтрока/ВсегоСтрок,2)+"%");
	ТекСтрока = ТекСтрока + 1;
	ОбработкаПрерыванияПользователя();
КонецФункции//глСостояниеВыполнения()

Функция ПредставлениеЗначения(Зн)
	Перем Представление,МассивСигнатурЗамены,СигнатураЗамены;
	
	Если Зн = Неопределено Тогда
		Возврат "";
	ИначеЕсли ТипЗнч(Зн) = Тип("Число") Тогда
		Возврат Формат(Зн,"ЧРД=.; ЧН=; ЧГ=0");
	ИначеЕсли ТипЗнч(Зн) = Тип("Дата") Тогда
		Возврат Формат(НачалоДня(Зн),"ДФ=yyyyMMdd");
	КонецЕсли;
	
	МассивСигнатурЗамены = Новый Массив;
	МассивСигнатурЗамены.Добавить(Символы.Таб);
	МассивСигнатурЗамены.Добавить(Символы.ВТаб);
	МассивСигнатурЗамены.Добавить(Символы.ПС);
	МассивСигнатурЗамены.Добавить(Символы.ВК);
	
	Представление = СокрЛП(Зн);
	Для Каждого СигнатураЗамены Из МассивСигнатурЗамены Цикл
		Представление = СокрЛП(СтрЗаменить(Представление,СигнатураЗамены," "));
	КонецЦикла;
	Возврат Представление;
КонецФункции//ПредставлениеЗначения()

Функция ЭкспортТЗ_В_ТХТ(ТЗ,Файл) Экспорт
	ТекстФайл = Новый ЗаписьТекста(Файл,КодировкаТекста.ANSI);
	Стр = "";Разд = "";
	Для каждого Кол Из ТЗ.Колонки Цикл
		Стр		= Стр + Разд + Кол.Имя;
		Разд	= Символы.Таб;
	КонецЦикла;
	ТекстФайл.ЗаписатьСтроку(Стр);
	
	х = 1;
	Для Каждого СтрТЗ Из ТЗ Цикл
		глСостояниеВыполнения(х,ТЗ.Количество(),"Заполнение """+Файл+"""... ");
		
		Стр = "";Разд = "";
		Для Каждого Кол Из ТЗ.Колонки Цикл
			Стр		= Стр + Разд + ПредставлениеЗначения(СтрТЗ[Кол.Имя]);
			Разд	= Символы.Таб;
		КонецЦикла;
		ТекстФайл.ЗаписатьСтроку(Стр);
	КонецЦикла; 
	//ТекстФайл.Записать(Файл);
	Сообщить("Записан файл """+ Файл+""" !",СтатусСообщения.Информация);
	Возврат 1;
КонецФункции//ЭкспортТЗ_В_ТХТ()

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если ПустаяСтрока(КаталогВыгрузки) Тогда
		Сообщить("Не указан каталог выгрузки. Файлы не будут сформированы!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
		
	СтруктРезультат =
		ВыгрузитьДанные(
			Новый Структура(
				"ДатаНач,ДатаКон,Номенклатура,manfid, ВыгружатьВсе"
			,	НачалоДня(ДатаНач)
			,	КонецДня(ДатаКон)
			,	Номенклатура
			,	manfid
			,	ВыгружатьВсе
			)
		)
	;
	МассивФайлов = Новый Массив;
	Для каждого ЭлСтруктуры Из СтруктРезультат Цикл
		ЭлТЗ = ЭлементыФормы[ЭлСтруктуры.Ключ];
		ЭлТЗ.Значение = ЭлСтруктуры.Значение;
		ЭлТЗ.СоздатьКолонки();
		
		ИмяФайла = КаталогВыгрузки+СтрЗаменить(ЭлСтруктуры.Ключ, "mx", "ro") +".txt";
		ЭкспортТЗ_В_ТХТ(ЭлСтруктуры.Значение, ИмяФайла);
		МассивФайлов.Добавить(ИмяФайла);
	КонецЦикла;
	
	Если ОтправитьНаПочту Тогда
		 ОтправитьНаПочту(МассивФайлов);
	КонецЕсли;
	
КонецПроцедуры//КнопкаВыполнитьНажатие()

Процедура КнопкаВвестиПериодНажатие(Элемент)
	НП = Новый НастройкаПериода;
	
	НП.ВариантНастройки	= ВариантНастройкиПериода.Интервал;
	НП.ДатаНачала		= ДатаНач;
	НП.ДатаОкончания	= ДатаКон;
	
	Если НЕ НП.Редактировать() Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНач	= НП.ДатаНачала;
	ДатаКон	= НП.ДатаОкончания;
КонецПроцедуры//КнопкаВвестиПериодНажатие()

Процедура КаталогВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДВФ.Заголовок = "Выберите каталог выгруженных файлов для COCA-COLA";
	Если ДВФ.Выбрать() Тогда
		Элемент.Значение = ДВФ.Каталог + ?(Прав(ДВФ.Каталог,1) <> "\","\","");
	КонецЕсли;
КонецПроцедуры//КаталогВыгрузкиНачалоВыбора()

Процедура КаталогВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	Перем Каталог;
	
	СтандартнаяОбработка = Ложь;
	Каталог = СокрЛП(Элемент.Значение);
	Если ПустаяСтрока(Каталог) Тогда
		Возврат;
	КонецЕсли;
	
	Каталог = Новый Файл(Каталог);
	Если НЕ Каталог.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Каталог.ЭтоКаталог() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение("explorer """ + Каталог.ПолноеИмя + """");
КонецПроцедуры//КаталогВыгрузкиОткрытие()

Процедура ПриОткрытии()
	Если	Не ЗначениеЗаполнено(ДатаНач)
		или	Не ЗначениеЗаполнено(ДатаКон)
		или ДатаНач > ДатаКон
	Тогда
		ДатаКон	= НачалоДня(ТекущаяДата())-1;
		ДатаНач	= НачалоДня(ДатаКон) - 45*84600;
	КонецЕсли;
	
	Если Не Номенклатура.Количество() или ПустаяСтрока(КаталогВыгрузки) Тогда
		Возврат;
	КонецЕсли;
	
	//Если Вопрос("Если Вы не закроете это окно, через 5 секунд будут произведены действия в автоматическом режиме.",РежимДиалогаВопрос.ОК,5) = КодВозвратаДиалога.Таймаут Тогда
	//	Сообщить("Автоматический режим.",СтатусСообщения.Информация);
	//	Попытка
	//		КнопкаВыполнитьНажатие(Неопределено);
	//		ЗаписьЖурналаРегистрации("ВыгрузкаДанныхОбработкойCISLink.Успех",,,,"Файлы выгружены."+Символы.ПС+"Период "+ПредставлениеПериода(ДатаНач,ДатаКон));
	//	Исключение
	//		Сообщить(ОписаниеОшибки(),СтатусСообщения.Важное);
	//		ЗаписьЖурналаРегистрации("ВыгрузкаДанныхОбработкойCISLink.Ошибка",,,,"Период "+ПредставлениеПериода(ДатаНач,ДатаКон)+Символы.ПС+"Описание ошибки: "+ОписаниеОшибки());
	//	КонецПопытки;
	//	Если Вопрос("Если Вы не закроете это окно, через 5 секунд будет завершена работа системы.",РежимДиалогаВопрос.ОК,5) = КодВозвратаДиалога.Таймаут Тогда
	//		ЗавершитьРаботуСистемы(Ложь,Ложь);
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры//ПриОткрытии()

Процедура ДействияФормыСгенерироватьСкрипт(Кнопка)
	ФормаГенерацииСкрипта = ПолучитьФорму("ФормаГенерацииСкриптаДляПланировщика");
	ФормаГенерацииСкрипта.ПутьКОбработке = ОбработкаОбъект.ИспользуемоеИмяФайла;
	ФормаГенерацииСкрипта.ОткрытьМодально();
КонецПроцедуры//ДействияФормыСгенерироватьСкрипт()

Процедура КоманднаяПанель1НастройкиПочты(Кнопка)
	ФормаНастройкиПочты = ПолучитьФорму("ФормаНастройкиПочты");
	ФормаНастройкиПочты.ОткрытьМодально();
КонецПроцедуры

Процедура ОтправитьНаПочту(МассивФайлов)

	Если Получатели.Количество() = 0 Тогда
		Сообщить("Не указаны получатели писем.");
		Возврат;
	КонецЕсли;

	Состояние("Отправка файлов на почту...");
	
	Профиль = ПолучитьИнтернетПочтовыйПрофиль();
	
	Почта = Новый ИнтернетПочта;
	Попытка
		Почта.Подключиться(Профиль);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	Для каждого ЭлСписка из Получатели Цикл
		Если НЕ ПустаяСтрока(ЭлСписка.Значение) Тогда
			Сообщение.Получатели.Добавить(ЭлСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Сообщение.Отправитель 	= Логин;
	Сообщение.Тема			= "Выгрузка Церсанит";
	Сообщение.Тексты.Добавить("Файлы приложены");
	
	Для каждого текФайл из МассивФайлов Цикл
		Сообщение.Вложения.Добавить(текФайл);
	КонецЦикла;
	
	Почта.Послать(Сообщение);
	Почта.Отключиться();
	
	Сообщить("Письмо отправлено.");
КонецПроцедуры


Процедура ПриЗакрытии()
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_SMTPСервер", 		SMTPСервер);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_SMTPПорт", 		SMTPПорт);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Логин", 			Логин);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Пароль", 			Пароль);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Получатели", 		Получатели);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ОтправитьНаПочту", ОтправитьНаПочту);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Номенклатура",		Номенклатура);
	//СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ДатаНач",			ДатаНач);
	//СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ДатаКон",			ДатаКон);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_КаталогВыгрузка",	КаталогВыгрузки);
	СохранитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ВыгружатьВсе",	ВыгружатьВсе);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	SMTPСервер 			= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_SMTPСервер");
	SMTPПорт 			= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_SMTPПорт");
	Логин 				= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Логин");
	Пароль 				= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Пароль");
	Получатели			= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Получатели");
	ОтправитьНаПочту 	= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ОтправитьНаПочту");
	Номенклатура		= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_Номенклатура");
	//ДатаНач				= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ДатаНач");
	//ДатаКон				= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ДатаКон");
	КаталогВыгрузки		= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_КаталогВыгрузка");
	ВыгружатьВсе		= ВосстановитьЗначение("ВНЕШНЯЯОБРАБОТКА_ВыгрузкаЦерсанит_ВыгружатьВсе");
КонецПроцедуры

manfid = 80;