Функция ВыполнитьЗапрос(Запрос, Знач Подсказка)
	Попытка
		#Если НаКлиенте Тогда
		Состояние("Выполнение запроса """ + Подсказка + """ ... ");
		#КонецЕсли
		Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Исключение
		#Если НаКлиенте Тогда
		Сообщить("Ошибка при выполнении запроса """ + Подсказка + """: " + ОписаниеОшибки(),СтатусСообщения.Важное);
		#КонецЕсли
	КонецПопытки;
	
	Возврат Новый ТаблицаЗначений;
КонецФункции//ВыполнитьЗапрос()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxcatal(Запрос,Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура,
		|	ВЫРАЗИТЬ(СУММА(Закупки.Стоимость) / ВЫБОР
		|			КОГДА СУММА(Закупки.Количество) = 0
		|				ТОГДА 1
		|			ИНАЧЕ СУММА(Закупки.Количество)
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена
		|ПОМЕСТИТЬ втПоследниеЦеныЗакупа
		|ИЗ
		|	(ВЫБРАТЬ
		|		Закупки.Номенклатура КАК Номенклатура,
		|		МАКСИМУМ(Закупки.Период) КАК Период
		|	ИЗ
		|		РегистрНакопления.Закупки КАК Закупки
		|	ГДЕ
		|		Закупки.Номенклатура В ИЕРАРХИИ(&Номенклатура)
		|		И Закупки.Период <= &ДатаКон
		|		И Закупки.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Закупки.Номенклатура) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Закупки КАК Закупки
		|		ПО ВложенныйЗапрос.Номенклатура = Закупки.Номенклатура
		|			И ВложенныйЗапрос.Период = Закупки.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СпрНоменклатура.Код КАК code,
		|	СпрНоменклатура.Артикул КАК art,
		|	МАКСИМУМ(ЕСТЬNULL(Штрихкоды.Штрихкод, """")) КАК barcode,
		|	СпрНоменклатура.Наименование КАК name,
		|	СпрНоменклатура.ЕдиницаХраненияОстатков.Коэффициент КАК pack,
		|	ЕСТЬNULL(втПоследниеЦеныЗакупа.Цена, """") КАК price,
		|	&manfid КАК manfid
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец = СпрНоменклатура.Ссылка)
		|			И (Штрихкоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13))
		|			И (Штрихкоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13))
		|			И (Штрихкоды.ЕдиницаИзмерения = СпрНоменклатура.ЕдиницаХраненияОстатков)
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПоследниеЦеныЗакупа КАК втПоследниеЦеныЗакупа
		|		ПО СпрНоменклатура.Ссылка = втПоследниеЦеныЗакупа.Номенклатура
		|ГДЕ
		|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
		|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ
		|	И СпрНоменклатура.Ссылка В ИЕРАРХИИ(&Номенклатура)
		|
		|СГРУППИРОВАТЬ ПО
		|	СпрНоменклатура.Артикул,
		|	СпрНоменклатура.Код,
		|	СпрНоменклатура.Наименование,
		|	СпрНоменклатура.ЕдиницаХраненияОстатков.Коэффициент,
		|	ЕСТЬNULL(втПоследниеЦеныЗакупа.Цена, """")";
		
	Запрос.УстановитьПараметр("ДатаКон", СтруктПараметров.ДатаКон);

	Возврат ВыполнитьЗапрос(Запрос,"mxcatal");
КонецФункции//mxcatal()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxclient(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА Контрагенты.Контрагент.Код
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК clientcode,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА Контрагенты.Контрагент.Наименование
		|		ИНАЧЕ ""Клиент не определен""
		|	КОНЕЦ КАК clientname,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВЫРАЗИТЬ(ЮрАдрес.Представление КАК СТРОКА(150))
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК address_ur,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВЫРАЗИТЬ(ФактАдрес.Представление КАК СТРОКА(150))
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК address,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА Контрагенты.Контрагент.ИНН
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК inn,
		|	ВЫБОР
		|		КОГДА Контрагенты.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА Контрагенты.Контрагент.КПП
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК kpp,
		|	"""" КАК spocode,
		|	"""" КАК sponame,
		|	"""" КАК spoaddress,
		|	"""" КАК fdistrict,
		|	"""" КАК city,
		|	"""" КАК kladrcode,
		|	"""" КАК zip_code,
		|	"""" КАК mccode,
		|	"""" КАК mcname,
		|	0 КАК notdeliver,
		|	&manfid КАК manfid
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПродажиОбороты.Контрагент КАК Контрагент,
		|		ЛОЖЬ КАК ЭтоЗакупка
		|	ИЗ
		|		РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|	ГДЕ
		|		(ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ИЛИ ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПродажиОбороты.Контрагент
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		ЗакупкиОбороты.Контрагент,
		|		ИСТИНА
		|	ИЗ
		|		РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ЗакупкиОбороты
		|	ГДЕ
		|		ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		И ЗакупкиОбороты.Контрагент = &КонтрагентРовезе
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗакупкиОбороты.Контрагент) КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ЮрАдрес
		|		ПО (ЮрАдрес.Объект = Контрагенты.Контрагент)
		|			И (ЮрАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
		|			И (ЮрАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактАдрес
		|		ПО (ФактАдрес.Объект = Контрагенты.Контрагент)
		|			И (ФактАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
		|			И (ФактАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента))"
	;
	
	Запрос.УстановитьПараметр("ДатаНач"		, СтруктПараметров.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"		, СтруктПараметров.ДатаКон);
	
	Возврат ВыполнитьЗапрос(Запрос,"mxclient");
КонецФункции//mxclient()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxrest(Запрос, Знач СтруктПараметров)
		
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.whcode,
	               |	ВложенныйЗапрос.code,
	               |	ВложенныйЗапрос.serial_no,
	               |	ВложенныйЗапрос.parcel_no,
	               |	ВложенныйЗапрос.curr_date,
	               |	ВложенныйЗапрос.inv_type,
	               |	ВложенныйЗапрос.ru,
	               |	ВложенныйЗапрос.beg_rest,
	               |	ВложенныйЗапрос.in_qty КАК in_qty,
	               |	ВложенныйЗапрос.out_qty КАК out_qty,
	               |	ВложенныйЗапрос.end_rest КАК end_rest,
	               |	ВЫБОР
	               |		КОГДА &ВыгружатьВсе
	               |			ТОГДА ВложенныйЗапрос.price
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК price,
	               |	ВложенныйЗапрос.manfid
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		1 КАК whcode,
	               |		взДанные.Номенклатура.Код КАК code,
	               |		взДанные.СерияНоменклатуры.СерийныйНомер КАК serial_no,
	               |		ЕСТЬNULL(взДанные.ДокументОприходования.Номер, """") КАК parcel_no,
	               |		&ДатаНач КАК curr_date,
	               |		0 КАК inv_type,
	               |		ВЫБОР
	               |			КОГДА взДанные.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
	               |				ТОГДА 5
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК ru,
	               |		ВЫБОР
	               |			КОГДА взДанные.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
	               |				ТОГДА взДанные.КоличествоНачальныйОстаток * 10000
	               |			ИНАЧЕ взДанные.КоличествоНачальныйОстаток
	               |		КОНЕЦ КАК beg_rest,
	               |		ВЫБОР
	               |			КОГДА взДанные.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
	               |				ТОГДА взДанные.КоличествоПриход * 10000
	               |			ИНАЧЕ взДанные.КоличествоПриход
	               |		КОНЕЦ КАК in_qty,
	               |		ВЫБОР
	               |			КОГДА взДанные.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
	               |				ТОГДА взДанные.КоличествоРасход * 10000
	               |			ИНАЧЕ взДанные.КоличествоРасход
	               |		КОНЕЦ КАК out_qty,
	               |		ВЫБОР
	               |			КОГДА взДанные.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
	               |				ТОГДА взДанные.КоличествоКонечныйОстаток * 10000
	               |			ИНАЧЕ взДанные.КоличествоКонечныйОстаток
	               |		КОНЕЦ КАК end_rest,
	               |		ВЫБОР
	               |			КОГДА взДанные.КоличествоРасход = 0
	               |				ТОГДА ВЫРАЗИТЬ(взДанные.СтоимостьКонечныйОстаток / взДанные.КоличествоКонечныйОстаток КАК ЧИСЛО(15, 2))
	               |			ИНАЧЕ ВЫРАЗИТЬ(взДанные.СтоимостьРасход / взДанные.КоличествоРасход КАК ЧИСЛО(15, 2))
	               |		КОНЕЦ КАК price,
	               |		&manfid КАК manfid
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, ПартииТоваровНаСкладахОбороты.Номенклатура) КАК Номенклатура,
	               |			ЕСТЬNULL(ВложенныйЗапрос.ХарактеристикаНоменклатуры, ПартииТоваровНаСкладахОбороты.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
	               |			ЕСТЬNULL(ВложенныйЗапрос.СерияНоменклатуры, ПартииТоваровНаСкладахОбороты.СерияНоменклатуры) КАК СерияНоменклатуры,
	               |			ЕСТЬNULL(ВложенныйЗапрос.КоличествоНачальныйОстаток, 0) КАК КоличествоНачальныйОстаток,
	               |			ЕСТЬNULL(ВложенныйЗапрос.ДокументОприходования, ПартииТоваровНаСкладахОбороты.ДокументОприходования) КАК ДокументОприходования,
	               |			СУММА(ЕСТЬNULL(ПартииТоваровНаСкладахОбороты.КоличествоПриход, 0) + ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОбороты.КоличествоРасход, 0) < 0
	               |						ТОГДА -ПартииТоваровНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК КоличествоПриход,
	               |			СУММА(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОбороты.КоличествоРасход, 0) > 0
	               |						ТОГДА ПартииТоваровНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК КоличествоРасход,
	               |			ЕСТЬNULL(ВложенныйЗапрос.КоличествоКонечныйОстаток, 0) КАК КоличествоКонечныйОстаток,
	               |			СУММА(ВЫБОР
	               |					КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОбороты.СтоимостьРасход, 0) < 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ПартииТоваровНаСкладахОбороты.СтоимостьРасход
	               |				КОНЕЦ) КАК СтоимостьРасход,
	               |			ВложенныйЗапрос.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	               |			ВложенныйЗапрос.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ВложенныйЗапрос.ДокументОприходования КАК ДокументОприходования,
	               |				ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |				ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |				ВложенныйЗапрос.СерияНоменклатуры КАК СерияНоменклатуры,
	               |				СУММА(ВложенныйЗапрос.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	               |				СУММА(ВложенныйЗапрос.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	               |				СУММА(ВложенныйЗапрос.СтоимостьНачальныйОстаток) КАК СтоимостьНачальныйОстаток,
	               |				СУММА(ВложенныйЗапрос.СтоимостьКонечныйОстаток) КАК СтоимостьКонечныйОстаток
	               |			ИЗ
	               |				(ВЫБРАТЬ
	               |					ПартииТоваровНаСкладахОстатки.ДокументОприходования КАК ДокументОприходования,
	               |					ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |					ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |					ПартииТоваровНаСкладахОстатки.СерияНоменклатуры КАК СерияНоменклатуры,
	               |					ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК КоличествоНачальныйОстаток,
	               |					0 КАК КоличествоКонечныйОстаток,
	               |					ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК СтоимостьНачальныйОстаток,
	               |					0 КАК СтоимостьКонечныйОстаток
	               |				ИЗ
	               |					РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаНач, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПартииТоваровНаСкладахОстатки
	               |				
	               |				ОБЪЕДИНИТЬ ВСЕ
	               |				
	               |				ВЫБРАТЬ
	               |					ПартииТоваровНаСкладахОстатки.ДокументОприходования,
	               |					ПартииТоваровНаСкладахОстатки.Номенклатура,
	               |					ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры,
	               |					ПартииТоваровНаСкладахОстатки.СерияНоменклатуры,
	               |					0,
	               |					ПартииТоваровНаСкладахОстатки.КоличествоОстаток,
	               |					0,
	               |					ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
	               |				ИЗ
	               |					РегистрНакопления.ПартииТоваровНаСкладах.Остатки(&ДатаКон, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПартииТоваровНаСкладахОстатки) КАК ВложенныйЗапрос
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ВложенныйЗапрос.Номенклатура,
	               |				ВложенныйЗапрос.ХарактеристикаНоменклатуры,
	               |				ВложенныйЗапрос.СерияНоменклатуры,
	               |				ВложенныйЗапрос.ДокументОприходования) КАК ВложенныйЗапрос
	               |				ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПартииТоваровНаСкладахОбороты
	               |				ПО ВложенныйЗапрос.Номенклатура = ПартииТоваровНаСкладахОбороты.Номенклатура
	               |					И ВложенныйЗапрос.ХарактеристикаНоменклатуры = ПартииТоваровНаСкладахОбороты.ХарактеристикаНоменклатуры
	               |					И ВложенныйЗапрос.СерияНоменклатуры = ПартииТоваровНаСкладахОбороты.СерияНоменклатуры
	               |					И ВложенныйЗапрос.ДокументОприходования = ПартииТоваровНаСкладахОбороты.ДокументОприходования
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЕСТЬNULL(ВложенныйЗапрос.ДокументОприходования, ПартииТоваровНаСкладахОбороты.ДокументОприходования),
	               |			ЕСТЬNULL(ВложенныйЗапрос.СерияНоменклатуры, ПартииТоваровНаСкладахОбороты.СерияНоменклатуры),
	               |			ЕСТЬNULL(ВложенныйЗапрос.ХарактеристикаНоменклатуры, ПартииТоваровНаСкладахОбороты.ХарактеристикаНоменклатуры),
	               |			ЕСТЬNULL(ВложенныйЗапрос.Номенклатура, ПартииТоваровНаСкладахОбороты.Номенклатура),
	               |			ЕСТЬNULL(ВложенныйЗапрос.КоличествоНачальныйОстаток, 0),
	               |			ЕСТЬNULL(ВложенныйЗапрос.КоличествоКонечныйОстаток, 0),
	               |			ВложенныйЗапрос.СтоимостьНачальныйОстаток,
	               |			ВложенныйЗапрос.СтоимостьКонечныйОстаток) КАК взДанные) КАК ВложенныйЗапрос";
	ТекстЗапросаСПериодами = "";Объединение = "";
	
	ДатаКон = КонецДня(СтруктПараметров.ДатаКон);
	ДатаНач	= КонецДня(СтруктПараметров.ДатаНач);
	Если ДатаНач > ДатаКон Тогда
		ДатаНач = ДатаКон;
	КонецЕсли;
		
	х = 0;
	
	Пока ДатаНач <= ДатаКон Цикл
		х = х + 1;
		ТекстЗапросаСПериодами =
				ТекстЗапросаСПериодами + Объединение
			+	СтрЗаменить(СтрЗаменить(ТекстЗапроса,"&ДатаКон","&ДатаКон_" + х),"&ДатаНач","&ДатаНач_" + х);
		Запрос.УстановитьПараметр("ДатаНач_" + х,НачалоДня(ДатаНач));
		Запрос.УстановитьПараметр("ДатаКон_" + х,ДатаНач);
		ДатаНач		= КонецДня(ДатаНач + 1);
		Объединение = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапросаСПериодами;
	
	Возврат ВыполнитьЗапрос(Запрос,"mxrest");
КонецФункции//mxrest()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxcredit(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Владелец.Код КАК clientcode,
		|	"""" КАК spocode,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ДоговорыКонтрагентов.КонтролироватьЧислоДнейЗадолженности = ИСТИНА
		|				ТОГДА ДоговорыКонтрагентов.ДопустимоеЧислоДнейЗадолженности
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК creditdays,
		|	СУММА(ВЫБОР
		|			КОГДА ДоговорыКонтрагентов.КонтролироватьСуммуЗадолженности = ИСТИНА
		|				ТОГДА ДоговорыКонтрагентов.ДопустимаяСуммаЗадолженности
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК creditlim,
		|	&manfid
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПродажиОбороты.Контрагент КАК Контрагент
		|		ИЗ
		|			РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|		ГДЕ
		|			(ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|					ИЛИ ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПродажиОбороты.Контрагент
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			ЗакупкиОбороты.Контрагент
		|		ИЗ
		|			РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ЗакупкиОбороты
		|		ГДЕ
		|			ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЗакупкиОбороты.Контрагент) КАК Контрагенты
		|		ПО (Контрагенты.Контрагент = ДоговорыКонтрагентов.Владелец)
		|ГДЕ
		|	(ДоговорыКонтрагентов.КонтролироватьСуммуЗадолженности = ИСТИНА
		|			ИЛИ ДоговорыКонтрагентов.КонтролироватьЧислоДнейЗадолженности = ИСТИНА)
		|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Владелец.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	clientcode";
	
	Возврат ВыполнитьЗапрос(Запрос,"mxcredit");
КонецФункции//mxcredit()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxwh(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК whcode,
		|	""Основной"" КАК whname,
		|	"""" КАК whaddress,
		|	&manfid"
	;
	
	Возврат ВыполнитьЗапрос(Запрос,"mxwh");
КонецФункции//mxwh()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxseria(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СерииНоменклатуры.Код КАК serial_no,
		|	СерииНоменклатуры.Владелец.Код КАК code,
		|	"""" КАК is_date,
		|	СерииНоменклатуры.СрокГодности КАК sl_date,
		|	СерииНоменклатуры.НомерГТД.Код КАК scd_number,
		|	&manfid
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.Владелец В ИЕРАРХИИ(&Номенклатура)
		|	И СерииНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура
		|	И СерииНоменклатуры.ПометкаУдаления = ЛОЖЬ
		|	И СерииНоменклатуры.Владелец.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	code";
	
	Возврат ВыполнитьЗапрос(Запрос,"mxseria");
КонецФункции//mxseria()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxdoc(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.doc_number,
		|	ВложенныйЗапрос.whcode,
		|	ВложенныйЗапрос.oper_type,
		|	ВложенныйЗапрос.doc_date,
		|	ВложенныйЗапрос.doc_parent,
		|	ВложенныйЗапрос.doc_ttn,
		|	ВложенныйЗапрос.doc_inv,
		|	МИНИМУМ(НАЧАЛОПЕРИОДА(ВложенныйЗапрос.order_date, ДЕНЬ)) КАК order_date,
		|	ВложенныйЗапрос.deliv_date,
		|	ВложенныйЗапрос.order_stat,
		|	ВложенныйЗапрос.deliv_type,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.clientcode
		|		ИНАЧЕ ""0""
		|	КОНЕЦ КАК clientcode,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.spocode
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК spocode,
		|	ВложенныйЗапрос.tpcode,
		|	ВложенныйЗапрос.manfid
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПродажиОбороты.Регистратор.Номер КАК doc_number,
		|		1 КАК whcode,
		|		ВЫБОР
		|			КОГДА ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК oper_type,
		|		ПродажиОбороты.Период КАК doc_date,
		|		ПродажиОбороты.Регистратор.Сделка.Номер КАК doc_parent,
		|		"""" КАК doc_ttn,
		|		"""" КАК doc_inv,
		|		ПродажиОбороты.ЗаказПокупателя.Дата КАК order_date,
		|		ПродажиОбороты.Регистратор.Дата КАК deliv_date,
		|		0 КАК order_stat,
		|		0 КАК deliv_type,
		|		ПродажиОбороты.Контрагент.Код КАК clientcode,
		|		"""" КАК spocode,
		|		ЕСТЬNULL(ПродажиОбороты.Регистратор.Проект.Код, ""ТП_НЕОПРЕДЕЛЕН"") КАК tpcode,
		|		&manfid КАК manfid,
		|		ЛОЖЬ КАК ЭтоЗакупка
		|	ИЗ
		|		РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|	ГДЕ
		|		(ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|				ИЛИ ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗакупкиОбороты.Регистратор.Номер,
		|		1,
		|		2,
		|		ЗакупкиОбороты.Период,
		|		ЗакупкиОбороты.Регистратор.Сделка.Номер,
		|		"""",
		|		"""",
		|		ЗакупкиОбороты.ЗаказПоставщику.Дата,
		|		ЗакупкиОбороты.Регистратор.Дата,
		|		0,
		|		0,
		|		ЗакупкиОбороты.Контрагент.Код,
		|		"""",
		|		""ТП_НЕОПРЕДЕЛЕН"",
		|		&manfid,
		|		ИСТИНА
		|	ИЗ
		|		РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ЗакупкиОбороты
		|	ГДЕ
		|		ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		И ЗакупкиОбороты.Контрагент = &КонтрагентРовезе) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.doc_number,
		|	ВложенныйЗапрос.doc_date,
		|	ВложенныйЗапрос.doc_parent,
		|	ВложенныйЗапрос.doc_ttn,
		|	ВложенныйЗапрос.doc_inv,
		|	ВложенныйЗапрос.deliv_date,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.clientcode
		|		ИНАЧЕ ""0""
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.ЭтоЗакупка
		|				ИЛИ &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.spocode
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	ВложенныйЗапрос.tpcode,
		|	ВложенныйЗапрос.manfid,
		|	ВложенныйЗапрос.whcode,
		|	ВложенныйЗапрос.oper_type,
		|	ВложенныйЗапрос.order_stat,
		|	ВложенныйЗапрос.deliv_type";
		
	Запрос.УстановитьПараметр("ДатаНач"			, СтруктПараметров.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"			, СтруктПараметров.ДатаКон);
	
	Возврат ВыполнитьЗапрос(Запрос,"mxdoc");
КонецФункции//mxdoc()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxfact(Запрос, Знач СтруктПараметров)
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.code,
		|	ВложенныйЗапрос.serial_no,
		|	ВложенныйЗапрос.parcel_no,
		|	ВложенныйЗапрос.doc_number,
		|	ВложенныйЗапрос.whcode,
		|	ВложенныйЗапрос.oper_type,
		|	ВложенныйЗапрос.doc_date,
		|	ВложенныйЗапрос.ru,
		|	ВложенныйЗапрос.quantity,
		|	ВЫБОР
		|		КОГДА &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.price
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК price,
		|	ВЫБОР
		|		КОГДА &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.amount
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК amount,
		|	ВЫБОР
		|		КОГДА &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.discount
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount,
		|	ВЫБОР
		|		КОГДА &ВыгружатьВсе
		|			ТОГДА ВложенныйЗапрос.vat
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК vat,
		|	ВложенныйЗапрос.manfid
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииТоваровНаСкладахОбороты.Номенклатура.Код КАК code,
		|		ПартииТоваровНаСкладахОбороты.СерияНоменклатуры.СерийныйНомер КАК serial_no,
		|		ПартииТоваровНаСкладахОбороты.ДокументОприходования.Номер КАК parcel_no,
		|		ПартииТоваровНаСкладахОбороты.Регистратор.Номер КАК doc_number,
		|		1 КАК whcode,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК oper_type,
		|		ПартииТоваровНаСкладахОбороты.Период КАК doc_date,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладахОбороты.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
		|				ТОГДА 5
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ru,
		|		ВЫРАЗИТЬ(ВЫБОР
		|				КОГДА ПартииТоваровНаСкладахОбороты.КоличествоОборот >= 0
		|					ТОГДА ПартииТоваровНаСкладахОбороты.КоличествоОборот
		|				ИНАЧЕ -ПартииТоваровНаСкладахОбороты.КоличествоОборот
		|			КОНЕЦ * ВЫБОР
		|				КОГДА ПартииТоваровНаСкладахОбороты.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
		|					ТОГДА 10000
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 0)) КАК quantity,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ТОГДА ВЫБОР
		|						КОГДА ПартииТоваровНаСкладахОбороты.КоличествоРасход = 0
		|							ТОГДА """"
		|						ИНАЧЕ ВЫРАЗИТЬ(ПартииТоваровНаСкладахОбороты.СтоимостьРасход / ПартииТоваровНаСкладахОбороты.КоличествоРасход КАК ЧИСЛО(15, 2))
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ПартииТоваровНаСкладахОбороты.КоличествоПриход = 0
		|						ТОГДА """"
		|					ИНАЧЕ ВЫРАЗИТЬ(ПартииТоваровНаСкладахОбороты.СтоимостьПриход / ПартииТоваровНаСкладахОбороты.КоличествоПриход КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		КОНЕЦ КАК price,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ТОГДА ПродажиОбороты.СтоимостьОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК amount,
		|		0 КАК discount,
		|		ВЫБОР
		|			КОГДА ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ТОГДА ПродажиОбороты.НДСОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК vat,
		|		&manfid КАК manfid
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровНаСкладах.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПартииТоваровНаСкладахОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|			ПО ПартииТоваровНаСкладахОбороты.Регистратор = ПродажиОбороты.Регистратор
		|				И ПартииТоваровНаСкладахОбороты.Номенклатура = ПродажиОбороты.Номенклатура
		|				И ПартииТоваровНаСкладахОбороты.ХарактеристикаНоменклатуры = ПродажиОбороты.ХарактеристикаНоменклатуры
		|	ГДЕ
		|		(ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|				ИЛИ ПартииТоваровНаСкладахОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗакупкиОбороты.Номенклатура.Код,
		|		СерииНоменклатуры.СерийныйНомер,
		|		ЗакупкиОбороты.Регистратор.Номер,
		|		ЗакупкиОбороты.Регистратор.Номер,
		|		1,
		|		2,
		|		ЗакупкиОбороты.Период,
		|		ВЫБОР
		|			КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
		|				ТОГДА 5
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫРАЗИТЬ(ЗакупкиОбороты.КоличествоОборот * ВЫБОР
		|				КОГДА ЗакупкиОбороты.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору = &ЕдиницаКвМ
		|					ТОГДА 10000
		|				ИНАЧЕ 1
		|			КОНЕЦ КАК ЧИСЛО(15, 0)),
		|		ВЫБОР
		|			КОГДА ЗакупкиОбороты.КоличествоОборот = 0
		|				ТОГДА """"
		|			ИНАЧЕ ВЫРАЗИТЬ(ЗакупкиОбороты.СтоимостьОборот / ЗакупкиОбороты.КоличествоОборот КАК ЧИСЛО(15, 2))
		|		КОНЕЦ,
		|		ЗакупкиОбороты.СтоимостьОборот,
		|		0,
		|		ВЫБОР
		|			КОГДА ЗакупкиОбороты.НДСОборот >= 0
		|				ТОГДА ЗакупкиОбороты.НДСОборот
		|			ИНАЧЕ -ЗакупкиОбороты.НДСОборот
		|		КОНЕЦ,
		|		&manfid
		|	ИЗ
		|		РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ЗакупкиОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ПоступлениеТоваровУслугТовары.Ссылка КАК Регистратор,
		|				ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|				МАКСИМУМ(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.СерияНоменклатуры.Код, """")) КАК СерияНоменклатурыКод
		|			ИЗ
		|				Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|			ГДЕ
		|				ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПоступлениеТоваровУслугТовары.Ссылка.Проведен = ИСТИНА
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПоступлениеТоваровУслугТовары.Ссылка,
		|				ПоступлениеТоваровУслугТовары.Номенклатура) КАК РегистраторСерии
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|				ПО РегистраторСерии.Номенклатура = СерииНоменклатуры.Владелец
		|					И РегистраторСерии.СерияНоменклатурыКод = СерииНоменклатуры.Код
		|			ПО (РегистраторСерии.Регистратор = ЗакупкиОбороты.Регистратор)
		|				И (РегистраторСерии.Номенклатура = ЗакупкиОбороты.Номенклатура)
		|	ГДЕ
		|		ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		И ЗакупкиОбороты.Контрагент = &КонтрагентРовезе) КАК ВложенныйЗапрос";

	Запрос.УстановитьПараметр("ДатаНач"			, СтруктПараметров.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"			, СтруктПараметров.ДатаКон);
	
	Возврат ВыполнитьЗапрос(Запрос,"mxfact");
КонецФункции//mxfact()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxorder(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Контрагент.Код КАК clientcode,
		|	"""" КАК spocode,
		|	&ДатаКон КАК creditdate,
		|	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.ДокументРасчетовСКонтрагентом.Номер КАК doc_number,
		|	СУММА(ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.СуммаВзаиморасчетовОстаток) КАК credit,
		|	&manfid КАК manfid
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(&ДатаКон, ) КАК ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПродажиОбороты.Контрагент КАК Контрагент
		|		ИЗ
		|			РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|		ГДЕ
		|			(ПродажиОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|					ИЛИ ПродажиОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПродажиОбороты.Контрагент
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			ЗакупкиОбороты.Контрагент
		|		ИЗ
		|			РегистрНакопления.Закупки.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ЗакупкиОбороты
		|		ГДЕ
		|			ЗакупкиОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЗакупкиОбороты.Контрагент) КАК Контрагенты
		|		ПО (Контрагенты.Контрагент = ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Контрагент)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.ДокументРасчетовСКонтрагентом.Номер,
		|	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Контрагент.Код
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.СуммаВзаиморасчетовОстаток) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	clientcode,
		|	doc_number";
		
	Запрос.УстановитьПараметр("ДатаНач"			, СтруктПараметров.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"			, СтруктПараметров.ДатаКон);
	
	Возврат ВыполнитьЗапрос(Запрос,"mxorder");	
КонецФункции//mxorder()

//////////////////////////////////////////////////////////////////////////////
//
Функция mxsr(Запрос, Знач СтруктПараметров)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТорговыеПредставители.tpcode КАК tpcode,
		|	ТорговыеПредставители.tpname КАК tpname,
		|	ТорговыеПредставители.tptypeid,
		|	ТорговыеПредставители.manfid
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЕСТЬNULL(ПродажиОбороты.Проект.Код, ""ТП_НЕОПРЕДЕЛЕН"") КАК tpcode,
		|		ЕСТЬNULL(ПродажиОбороты.Проект.Наименование, ""ТП_НЕОПРЕДЕЛЕН"") КАК tpname,
		|		2 КАК tptypeid,
		|		&manfid КАК manfid
		|	ИЗ
		|		РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, Период, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЕСТЬNULL(ПродажиОбороты.Проект.Код, ""ТП_НЕОПРЕДЕЛЕН""),
		|		ЕСТЬNULL(ПродажиОбороты.Проект.Наименование, ""ТП_НЕОПРЕДЕЛЕН"")
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		""ТП_НЕОПРЕДЕЛЕН"",
		|		""ТП_НЕОПРЕДЕЛЕН"",
		|		2,
		|		&manfid) КАК ТорговыеПредставители
		|
		|УПОРЯДОЧИТЬ ПО
		|	tpname,
		|	tpcode";
		
	Запрос.УстановитьПараметр("ДатаНач"			, СтруктПараметров.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон"			, СтруктПараметров.ДатаКон);
	
	Возврат ВыполнитьЗапрос(Запрос,"mxsr");
КонецФункции//mxsr()

//////////////////////////////////////////////////////////////////////////////
//
Функция ВыгрузитьДанные(Знач СтруктПараметров) Экспорт
	Перем Запрос;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("manfid"			, СтруктПараметров.manfid);
	Запрос.УстановитьПараметр("Номенклатура"	, СтруктПараметров.Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаКвМ"		, Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("055")); //м2
	Запрос.УстановитьПараметр("ВыгружатьВсе"	, СтруктПараметров.ВыгружатьВсе);
	Запрос.УстановитьПараметр("КонтрагентРовезе", Справочники.Контрагенты.НайтиПоКоду("ю0025005"));
	Возврат
		Новый Структура(
			"mxcatal,mxclient,mxsr,mxwh,mxseria,mxdoc,mxfact,mxrest"
		,	mxcatal(Запрос,СтруктПараметров)
		,	mxclient(Запрос,СтруктПараметров)
		,	mxsr(Запрос,СтруктПараметров)
		,	mxwh(Запрос,СтруктПараметров)
		,	mxseria(Запрос,СтруктПараметров)
		,	mxdoc(Запрос,СтруктПараметров)
		,	mxfact(Запрос,СтруктПараметров)
		,	mxrest(Запрос,СтруктПараметров)
		)
	;
КонецФункции//ВыгрузитьДанные()

//////////////////////////////////////////////////////////////////////////////
//
Функция ПолучитьИнтернетПочтовыйПрофиль() Экспорт
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP 	= SMTPСервер;
	Профиль.ПортSMTP			= SMTPПорт;
	Профиль.АутентификацияSMTP 	= СпособSMTPАутентификации.Login;
	Профиль.ПользовательSMTP	= Логин;
	Профиль.ПарольSMTP			= Пароль;
	Профиль.Пользователь		= Логин;
	Профиль.Пароль				= Пароль;

	Возврат Профиль;
	
КонецФункции

Функция ПроверитьЗаполнениеОбязательныхПолей() Экспорт

	ТекстОшибок = "";
	
	//Если НЕ ЗначениеЗаполнено(АдресЭлектроннойПочты) Тогда
	//	ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан адрес (E-mail) учетной записи.";
	//КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(SMTPСервер) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя SMTP сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(SMTPПорт) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указан порт SMTP сервера.";
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Логин) Тогда
		ТекстОшибок = ТекстОшибок + Символы.ПС + "Не указано имя пользователя для доступа к почтовому серверу.";
	КонецЕсли;
	
	Возврат СокрЛП(ТекстОшибок);

КонецФункции
